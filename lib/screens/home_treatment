import 'dart:async';
import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';

class Treatment extends StatefulWidget {
  const Treatment({super.key});

  @override
  _TreatmentState createState() => _TreatmentState();
}

class _TreatmentState extends State<Treatment> {
  late VideoPlayerController _controller;
  bool _isPlaying = false;
  bool _showPlayPauseButton = true;
  Timer? _hideButtonTimer;

  @override
  void initState() {
    super.initState();
    _controller = VideoPlayerController.asset('assets/videos/ukraine_afg.mp4')
      ..initialize().then((_) {
        setState(() {
          _controller.play();
          _isPlaying = true;
          _startHideButtonTimer();
        });
      }).catchError((error) {
        print("Video Initialization Error: $error");
      });
  }

  @override
  void dispose() {
    _controller.dispose();
    _hideButtonTimer?.cancel();
    super.dispose();
  }

  void _togglePlayPause() {
    setState(() {
      if (_controller.value.isPlaying) {
        _controller.pause();
        _isPlaying = false;
      } else {
        _controller.play();
        _isPlaying = true;
      }
      _showPlayPauseButton = true;
      _startHideButtonTimer();
    });
  }

  void _startHideButtonTimer() {
    _hideButtonTimer?.cancel();
    _hideButtonTimer = Timer(Duration(seconds: 1), () {
      setState(() {
        _showPlayPauseButton = false;
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Treatment'),
      ),
      body: Center(
        child: _controller.value.isInitialized
            ? Stack(
                alignment: Alignment.center,
                children: [
                  AspectRatio(
                    aspectRatio: _controller.value.aspectRatio,
                    child: VideoPlayer(_controller),
                  ),
                  GestureDetector(
                    onTap: _togglePlayPause,
                    child: Container(
                      color: Colors.transparent,
                      child: Center(
                        child: AnimatedOpacity(
                          opacity: _showPlayPauseButton ? 1.0 : 0.0,
                          duration: Duration(milliseconds: 300),
                          child: Icon(
                            _isPlaying ? Icons.pause : Icons.play_arrow,
                            color: Colors.white,
                            size: 100.0,
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              )
            : CircularProgressIndicator(),
      ),
    );
  }
}
